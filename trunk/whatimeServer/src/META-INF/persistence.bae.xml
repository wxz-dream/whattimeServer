<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence  
    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd" version="2.0">
	<persistence-unit name="wtserver" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<class>com.setsail.entity.user.FriendReq</class>
		<class>com.setsail.entity.user.Level</class>
		<class>com.setsail.entity.user.Relation</class>
		<class>com.setsail.entity.user.User</class>
		<class>com.setsail.entity.business.AlarmCategory</class>
		<class>com.setsail.entity.business.JoinRelation</class>
		<class>com.setsail.entity.business.UserLocalAlarm</class>
		<class>com.setsail.entity.business.UserLocalTask</class>
		<class>com.setsail.entity.business.UserLocalTaskImg</class>
		<class>com.setsail.entity.business.UserShareAlarm</class>
		<class>com.setsail.entity.business.UserShareTask</class>
		<class>com.setsail.entity.business.UserShareTaskImg</class>
		
	<properties>
			<property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
			<property name="hibernate.connection.url" value="jdbc:mysql://sqld.duapp.com:4050/nVnzOvGuotZiqXIDcbJy" />
			<property name="hibernate.connection.username" value="W3ORf32x3RjCEDSgE0XAYin0" />
			<property name="hibernate.connection.password" value="0rM4BVjVdPsRt9QHed4lBe3cLgcgf5sU" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" />
			<property name="hibernate.show_sql" value="false" />
			<property name="hibernate.format_sql" value="false" />
			<property name="hibernate.use_sql_comments" value="false" />
			<property name="hibernate.hbm2ddl.auto" value="update" />
			<property name="hibernate.connection.provider_class"
				value="org.hibernate.connection.C3P0ConnectionProvider" />
			<property name="hibernate.c3p0.min_size" value="1"/>
			<property name="hibernate.c3p0.max_size" value="5"/>
			<property name="hibernate.c3p0.timeout" value="15"/>
			<property name="hibernate.c3p0.max_statements" value="30"/>
			<property name="hibernate.c3p0.acquire_increment" value="3"/>
			<!--每30秒检查所有连接池中的空闲连接。Default: 0 -->
			<property name="hibernate.c3p0.idle_test_period" value="30"/>
			<!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么 属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试 
				使用。Default: null -->
			<property name="c3p0.automaticTestTable" value="test"/>
			<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
				获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
			<property name="c3p0.breakAfterAcquireFailure" value="true"/>
			<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意： 测试的表必须在初始数据源的时候就存在。Default: 
				null -->
			<!-- <property name="c3p0.preferredTestQuery" value="select id from test where id=1"/> -->
			<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
				等方法来提升连接测试的性能。Default: false -->
			<property name="c3p0.testConnectionOnCheckout" value="false"/>
		</properties>
	</persistence-unit>
</persistence> 